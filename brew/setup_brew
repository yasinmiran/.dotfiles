#!/usr/bin/env zsh

# MIT License
#
# Copyright (c) 2021 Yasin Miran
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This file contains the bootstrap logic for homebrew. This shouldn't be called
# everytime (although its fine). These commands, rather setup.zsh file intended
# to call from dotbot shell configuration when configuring a new machine.

# First source the brew related default configurations to the shell environment.
# We can ensure that zshrc variables are in the env because we source it after
# linking. See dotbot config for `source zsh/zshrc` shell command.
source "$DOTFILES_DIR/brew/defaults.zsh"

# Install homebrew via curl. If brew is already installed then just update
# the packages and exit.
# Documentation: https://docs.brew.sh/Installation
if exists brew; then
  echo "Nothing done. Homebrew is already installed."
else
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# By default when after a successful brew installation we will bundle the
# packages using the Brewfile.

brew_bundle_all && # Re-instate the packages, casks, and mas.
  update_brewfile # Update the Brewfile once again.
