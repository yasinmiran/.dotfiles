#!/usr/bin/env zsh

# ======================================================================================
# Aliases
# ======================================================================================

# Lot's of aliases will be sourced when we use oh-my-zsh because
# I will be using their git plugin. So, check the cheatsheet.
# https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet#git

alias gut="git"
alias got="git"

alias gstash="git stash"             # default stash.
alias gstashall="git stash -u"       # Stash all untracked ones.
alias gp="git push"                  # default push.
alias gpristinesoft="git clean -dff" # Clears all untracked files.
alias gundo="git reset HEAD~1"       # Undo last commit.

# ======================================================================================
# Functions
# ======================================================================================

# Abbreviation suwm: Sync Up with Main/Master
#
# Sync up with main branch. This function is a quick way to
# sync the origin main branch with the upstream main.
#
# @arg $1 main/master default is "master"
function suwm() {

  cat <<EOS

Here are the remotes you've added: -
$(git remote -v)

EOS

  if ask "Do you want to proceed?" Y; then
    local ref=${1:-"master"}
    local with_upstream=${2:-true}
    gst &&
      gstashall &&
      if ask "Do you want to clean binaries as well?" N; then
        # Loaded via zsh git helpers. It will clean all the
        # installed binaries. i.e., node_modules, dist
        gpristine
      else
        gpristinesoft
      fi &&
      gco "$ref" &&
      if [[ "$with_upstream" == true ]]; then
        gf "upstream" &&
          grb "upstream/$ref" &&
          echo "You have 5 seconds to cancel push 'origin'" &&
          sleep 5 &&
          gp "origin" "$ref"
      else
        gf "origin" &&
          echo "You have 5 seconds to cancel push 'origin'" &&
          gl "origin" "$ref"
      fi
  fi

}
