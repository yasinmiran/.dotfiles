#!/usr/bin/env zsh

source "$DOTFILES_DIR/git/defaults"

# Generate SSH key in default location (~/.ssh/id_ed25519)
ssh-keygen -t ed25519 -C "wytm97@protonmail.com"

# Start the ssh-agent
eval "$(ssh-agent -s)"

# Detect the operating system
OS_TYPE=$(check_system)

# Create config file with necessary settings
if [[ "$OS_TYPE" == "Darwin" ]]; then
  # macOS specific SSH config
  cat >~/.ssh/config <<EOF
Host *
  AddKeysToAgent yes
  UseKeychain yes
  IdentityFile ~/.ssh/id_ed25519
EOF
elif [[ "$OS_TYPE" == "Linux" ]]; then
  # Linux specific SSH config
  cat >~/.ssh/config <<EOF
Host *
  AddKeysToAgent yes
  IdentityFile ~/.ssh/id_ed25519
EOF
fi

# Add private key to ssh-agent
if [[ "$OS_TYPE" == "Darwin" ]]; then
  ssh-add -K ~/.ssh/id_ed25519
else
  ssh-add ~/.ssh/id_ed25519
fi

# Copy public key to clipboard
if [[ "$OS_TYPE" == "Darwin" ]]; then
  pbcopy <~/.ssh/id_ed25519.pub
elif [[ "$OS_TYPE" == "Linux" ]]; then
  # Function to try installing a package, then use it
  # if the installation succeeds
  try_install_and_use() {
    local package=$1
    local command=$2
    local args=$3
    if ! command -v "$command" &>/dev/null; then
      echo "$command not found. Attempting to install $package..."
      if sudo apt-get install -y "$package"; then
        echo "$package successfully installed."
      else
        echo "Failed to install $package. Please install it manually."
        return 1
      fi
    fi
    # Retry the command after installation
    if command -v "$command" &>/dev/null; then
      $command "$args" <~/.ssh/id_ed25519.pub
    else
      echo "Failed to execute $command even after installation."
    fi
  }
  # Try xclip first, then xsel if xclip is not installed or fails
  if ! try_install_and_use "xclip" "xclip" "-selection clipboard"; then
    try_install_and_use "xsel" "xsel" "--clipboard"
  fi
fi

# Test SSH connection, then verify fingerprint and username
# https://help.github.com/en/github/authenticating-to-github/testing-your-ssh-connection
ssh -T git@github.com
