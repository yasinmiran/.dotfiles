#!/usr/bin/env zsh

# MIT License
#
# Copyright (c) 2021 Yasin Miran
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# First of all make homebrew my default shell.
chsh -s "$(which zsh)"

# Prompt user to install the XCode Command Line Tools
if ! xcode-select --print-path &>/dev/null; then
  # Proceed to install if not-installed
  echo "Installing Xcode CLI" &&
    xcode-select --install &>/dev/null
  # Wait until the XCode Command Line Tools are installed
  until xcode-select --print-path &>/dev/null; do
    sleep 5
  done
  echo $? 'Install Xcode Command Line Tools.'
  # Point the `xcode-select` developer directory to the appropriate directory
  # from within `Xcode.app` https://github.com/alrra/dotfiles/issues/13
  sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
  # Prompt user to agree to the terms of the Xcode license
  # https://github.com/alrra/dotfiles/issues/10
  sudo xcodebuild -license
  echo $? 'Agree with the Xcode Command Line Tools licence.'
else
  echo "Xcode Command Line Tools already installed."
fi

# Install oh-my-zsh and required extensions.
if [[ -d "$OMZ_INSTALLATION_PATH" ]]; then
  echo "Oh-My-Zsh is already installed." &&
    if ask "Do you want to update it?" Y; then
      omz update
    fi
else
  readonly url=https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
  sh -c "$(curl -fsSL $url)" NUL --keep-zshrc
  unset url
fi
