#!/usr/bin/env zsh

source "$DOTFILES_DIR/zsh/zshenv"

function install_zsh() {
  url=https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
  sh -c "$(curl -fsSL $url)" NUL --keep-zshrc
  unset url
}

# First of all, make zsh my default shell.
if [ "/bin/zsh" != "$(which zsh)" ]; then
  # Attempt to change the shell using sudo, capturing any error.
  if ! sudo chsh -s "$(which zsh)" 2>/dev/null; then
    # If the first attempt fails, try changing the shell for the current user without sudo
    if ! chsh -s "$(which zsh)" 2>/dev/null; then
      # If both attempts fail, provide instructions for manual change
      echo "Unable to change the default shell automatically."
      echo "Please change your default shell manually using: chsh -s $(which zsh) or chsh"
      echo "You might need to enter your password."
    else
      echo "Successfully changed the default shell to zsh for $USER."
    fi
  else
    echo "Successfully changed the default shell to zsh with root privileges."
  fi
else
  echo "Hey $USER, zsh is already your default shell :) doing my happy dance..."
fi

system_type=$(check_system)

# Prompt user to install the XCode Command Line Tools
if [[ "$system_type" == "macOS" ]]; then
  if ! xcode-select --print-path &>/dev/null; then
    # Proceed to install if not-installed
    echo "Installing Xcode CLI" &&
      xcode-select --install &>/dev/null
    # Wait until the XCode Command Line Tools are installed
    until xcode-select --print-path &>/dev/null; do
      sleep 5
    done
    echo $? 'Install Xcode Command Line Tools.'
    # Point the `xcode-select` developer directory to the appropriate directory
    # from within `Xcode.app` https://github.com/alrra/dotfiles/issues/13
    sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
    # Prompt user to agree to the terms of the Xcode license
    # https://github.com/alrra/dotfiles/issues/10
    sudo xcodebuild -license
    echo $? 'Agree with the Xcode Command Line Tools licence.'
  else
    echo "Xcode Command Line Tools already installed."
  fi
fi

# Install oh-my-zsh and required extensions.
if [[ -d "$OMZ_INSTALLATION_PATH" ]]; then
  echo "Oh-My-Zsh is already installed."
  if ask "Anyways, do you want to update it?" Y; then
    command -v omz
    omz update
  fi
else
  install_zsh
fi

# Clone auto suggestions for omz.
if [ -d "$ZSH_CUSTOM" ] && [ ! -d "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions" ]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions"
fi
