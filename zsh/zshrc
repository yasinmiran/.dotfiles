#!/usr/bin/env zsh

# ======================================================================================
# Exports
# ======================================================================================

# Some cool shell variables:
#
# $COLUMNS        Number of columns to use in Terminal view
# $DIRSTACK       List of directories used by the pushd and popd commands
# $GROUPS         Various groups with which the user is associated
# $HISTFILE       File containing the shell history
# $HOME           Home directory for the user
# $HOSTNAME       Name of the system on which the shell is running
# $LINES          Number of lines currently being used by the shell
# $PATH           List of directories the shell uses to resolve commands
# $PS1            String used as the primary prompt
# $PS2            String used as the secondary prompt
# $SHELL          Shell program being used
# $SHELLOPTS      Options in effect for the shell
# $TERM           Type of terminal that the shell is displaying its content to
# $UID            User ID of the currently logged-in user
# $USER           Username of the currently logged-in user
# $PWD            Present working directory
# _ (underscore)  Previously executed command
# $?              Previous command exit code 0...127

export PATH="$PATH"
export DEVELOPMENT_DIR="$HOME/development"
export BINARIES_DIR="$HOME/binaries"
export DOTFILES_DIR="$HOME/.dotfiles"
export OMZ_INSTALLATION_PATH="$HOME/.oh-my-zsh"

# Fixes `insecure completion-dependent directories detected` error warning.
# https://github.com/ohmyzsh/ohmyzsh/issues/6835
# https://stackoverflow.com/a/61433333
export ZSH_DISABLE_COMPFIX="true"

# if Java installed via brew, then pick it up from libs and export it's path.
[ -d "/usr/libexec/java_home" ] && export JAVA_HOME="$(/usr/libexec/java_home -v1.8)"

# nvm related source loaders
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# ======================================================================================
# Aliases
# ======================================================================================

alias ..="cd .."                    # go back one directory
alias ...="cd ../.."                # go back two directories
alias ....="cd ../../.."            # go back four directories
alias .....="cd ../../../.."        # go back five directories
alias ......="cd ../../../../.."    # go back six directories
alias ~="cd ~"                      # go to home but `cd` is probably faster to type.
alias -- -="cd -"                   # go to old directory == cd $OLDPWD

alias d="cd ~/Documents"            # go to documents
alias dl="cd ~/Downloads"           # go to downloads
alias dt="cd ~/Desktop"             # go to desktop
alias dev='cd $DEVELOPMENT_DIR'     # go to dev working directory
alias bins='cd $BINARIES_DIR'       # go to binaries directory
alias dotfiles='cd "$DOTFILES_DIR"' # Go to dotfiles directory

alias ls="exa -laFh --git"  # Override default ls
alias cls="clear"           # Good old cls
alias rrr="exec zsh"        # Relaunch zsh

# Since we use oh-my-zsh there will lots of aliases loaded to the env. However,
# I want some commands the way I want so I'm overriding the similar existing
# ones with mine. First push all the above aliases and then pop back later.
PERSONAL_ALIASES=$(alias -L)

# ======================================================================================
# Functions
# ======================================================================================

# Abbreviated for: Append to $PATH
# This function will append a path to $PATH and source the self itself.
function atop() {
  local new_path && new_path=${1}
  if [[ -n "$new_path" ]] && [[ -d "$new_path" ]]; then
    PATH="$PATH:$new_path"
  else
    echo "Nothing done. Path is invalid!"
  fi
}

# Abbreviated for: Make directory and Change directory.
# This function will create the given directory and cd into it immediately.
function mkcd() {
  echo "Creating directory $1 and navigating you into it." &&
    mkdir -p "$1" && cd "$1" || exit
}

# Find all matching aliases using alias-finder plugin.
function alf() {
  echo "Searching for aliases..." &&
    alias-finder -l "$1"
}

# This function is used to synchronize local dotfiles to
# this repository files.
# I have only sync brew related things for now.
function synchronize() {
  echo "Syncing to $DOTFILES_DIR" &&
    brew_dump
}

# ======================================================================================
# Default Command Executions
#
# Below this section is dedicated to source all the necessary environment and other
# source files for zsh. Note that some of the oh-my-zsh related ones are also sourced
# here to ensure consistency across files.
# ======================================================================================

readonly sources=(
  "$DOTFILES_DIR/zsh/oh_my_zsh"
  "$DOTFILES_DIR/git/defaults"
  "$DOTFILES_DIR/brew/defaults"
  "$DOTFILES_DIR/node/defaults"
  "$DOTFILES_DIR/docker/defaults"
  "$DOTFILES_DIR/macos/defaults"
  # "$DOTFILES_DIR/workplace/wso2"
)

# Append binary paths to $PATH.
atop "/opt/homebrew/bin" # Homebrew Binaries
atop "/Applications/Visual Studio Code.app/Contents/Resources/app/bin" # VSCode Shortcut
atop "$HOME/.rd/bin" # Rancher Desktop

# New shell prompt message

echo -e "\nA new $(ps -o comm= $$) session created with pid $$ | zsh version: $ZSH_VERSION"
for sourze in "${sources[@]}"; do
  # shellcheck source=git/defaults
  . "$sourze"
done
eval "$PERSONAL_ALIASES"
echo -e "$USER's zsh environment is ready.\n"
